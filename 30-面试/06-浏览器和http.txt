一、HTTP和HTTPS
 - http超文本协议，默认80端口，底层使用TCP协议，保证数据传输的可靠性。
 - HTTPS是http协议的安全版本。

二、TCP三次握手和四次挥手

三、从输入URL到页面加载的全过程
 - 首先在浏览器中输入url，先会查找缓存
 - DNS解析域名，解析url中域名对应的IP地址
 - 建立TCP链接
 - 发送http请求
 - 服务器响应请求并返回结果
 - 关闭TCP链接
 - 浏览器渲染到页面上

三、浏览器内核理解
  - 渲染引擎: 其职责就是渲染，在浏览器窗口中显示所请求的内容。
  默认情况下可以显示html、xml、文档和图片，也可以借助一些浏览器扩展插件显示其他类型的数据
  - JS引擎: 解析和执行JavaScript来实现网页的动态效果

四、浏览器的渲染原理
生成DOM树 -> 生成CSS规则树 -> 构建渲染树 -> 布局 -> 绘制
 - 首先解析收到的文档，生成DOM树，DOM树由DOM元素和属性节点组成。
 - 对CSS进行解析，生成一颗CSS规则树。
 - 根据DOM树和CSS规则树构建渲染树。渲染树的节点称为渲染对象。
 - 浏览器生成渲染树默认是没有位置和大小的，所以浏览器会根据渲染树来进行布局（回流）
 - 布局结束后就是绘制阶段，遍历渲染树并调用渲染对象的paint方法将他们的内容显示到屏幕上。

四、浏览器的重排/回流（Reflow）和重绘（Repaint）
 重排: 当DOM的变化影响了元素的几何信息，浏览器需要重新计算元素的几何属性，将其安装在界面正确的位置，叫做重排。
  - 重新生成布局，重新排列元素
 重绘: 当一个元素外观发生改变，但没有改变布局，重新把元素外观绘制出来的过程，叫做重绘。
  - 某些元素外观的改。
 触发重排或重绘:
  - 添加、更新、删除DOM节点
  - 通过display: none隐藏一个DOM节点，触发重排和重绘
  - 通过visibility: hidden隐藏一个DOM，只触发重绘，不会触发重排， 因为DOM的几何信息没有改变
  - 移动或者给页面中的DOM添加动画
  - 用户行为，例如调整窗口大小、改变字体等等

五、HTTP请求跨域问题
跨域本质是浏览器基于同源策略的一种安全手段，所谓同源即指在同一个域（协议相同、主机相同、端口相同）
解决方案:
 - JSONP
 - CORS
 - Proxy

1、CORS（跨域资源共享）


六、TCP和UDP的区别

七、cookie、sessionStorage、localStorage
 - cookie会在同源的http请求中携带，
 - sessionStorage 本地会话存储，仅在当前浏览器窗口有效
 - localStorage 也是本地存储，关闭窗口或者浏览器也会保存

八、浏览器的缓存机制
 - 浏览器每次发送请求，都会先在浏览器缓存中查找该请求的结果以及缓存标识
 - 浏览器每次拿到返回的请求结果，都会将该结果和缓存标识存入浏览器缓存中
 强缓存:
 协商缓存:

九、进程、线程、协程
 - 进程: 
 - 线程: 
 - 协程: 
 